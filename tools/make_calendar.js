// This script generates lookup tables for the calendar library.
// Generated files:
//   lib/曆表.wy
//     The LUTs used by the standard calendar library.
//   tools/calendar.html
//     A table showing the first day of each month for checking.

try {
  process.chdir("./tools");
} catch (e) { } //make sure we're in tools directory

// totalDay of 1st of month #n = ceil(n * 25101 / 850 - 1) + monthFix(n)
// monthFix is tabulated below

// start index of the month start correction table
// update this value if the table is extended further into the past
const MONTH_FIX_START = 0;

// month start correction table
// lists correction to the totalDay of 1st of each month
const MONTH_FIX_TABLE = [];


// totalMonth of leap month #n = ceil(n * 3157 / 94 - 27) + leapFix(n)
// leapFix is tabulated below

// start index of the leap month correction table
// update this value if the table is extended further into the past
const LEAP_FIX_START = 0;

// leap month correction table
// lists correction to the totalMonth of each leap month
const LEAP_FIX_TABLE = [];


const WENYAN_HEAD = `注曰「「此文程式之作文也。勿施以修訂。」」
注曰「「程式書於文 tools/make_calendar.js 」」

`;

const getNumWord = function (n) {
  const NUM_CHARS = "〇一二三四五六七八九十";
  if (n < 0) {
    return "負" + getNumWord(-n);
  }
  let str = "";
  do {
    str = NUM_CHARS.charAt(n % 10) + str;
    n = Math.trunc(n / 10);
  } while (n > 0);
  return str;
};

const generateWenyan = function () {
  const ELEMS_PER_LINE = 20;
  let wy = WENYAN_HEAD;
  wy += `今有一數。曰${getNumWord(MONTH_FIX_START)}。名之曰「始曆月」。\n`;
  wy += "今有一列。名之曰「曆月表」。\n";
  wy += `今有一數。曰${getNumWord(LEAP_FIX_START)}。名之曰「始閏月」。\n`;
  wy += "今有一列。名之曰「閏月表」。\n";
  wy += "\n充「曆月表」。\n";
  for (let i = 0; i < MONTH_FIX_TABLE.length; ++i) {
    if (i === 0 || (i + MONTH_FIX_START) % ELEMS_PER_LINE === 0) {
      wy += "\t";
    }
    wy += `以${getNumWord(MONTH_FIX_TABLE[i])}`;
    if (i + 1 === MONTH_FIX_TABLE.length || (i + 1 + MONTH_FIX_START) % ELEMS_PER_LINE === 0) {
      wy += "。\n";
    }
  }
  wy += "\n充「閏月表」。\n";
  for (let i = 0; i < LEAP_FIX_TABLE.length; ++i) {
    if (i === 0 || (i + LEAP_FIX_START) % ELEMS_PER_LINE === 0) {
      wy += "\t";
    }
    wy += `以${getNumWord(LEAP_FIX_TABLE[i])}`;
    if (i + 1 === LEAP_FIX_TABLE.length || (i + 1 + LEAP_FIX_START) % ELEMS_PER_LINE === 0) {
      wy += "。\n";
    }
  }
  return wy;
};


const HTML_HEAD = `<!-- DOCTYPE html -->
<!-- Generated by make_calendar.js -->
<html>
<head>
  <meta charset="UTF-8">
  <title>Calendar</title>
  <style>
    table, th, td {
      border: solid 1px black;
      border-collapse: collapse;
    }
    th, td {
      padding: 0.25em;
      text-align: center;
    }
    th {
      background-color: #ccc;
    }
    .even {
      background-color: #eee;
    }
    .odd {
      background-color: #fff;
    }
    .leap {
      background-color: #bdf;
    }
  </style>
</head>
<body>
  <table>
`;

const TABLE_HEAD = `    <tr>
      <th>年</th>
      <th>正月</th>
      <th>二月</th>
      <th>三月</th>
      <th>四月</th>
      <th>五月</th>
      <th>六月</th>
      <th>七月</th>
      <th>八月</th>
      <th>九月</th>
      <th>十月</th>
      <th>十一月</th>
      <th>十二月</th>
    </tr>
`;

const HTML_TAIL = `  </table>
</body>
</html>
`;

const CE_YEAR_OFFSET = 2697;

const getSexagenaryWord = function (n) {
  return "甲乙丙丁戊己庚辛壬癸".charAt((n - 1) % 10) + "子丑寅卯辰巳午未申酉戌亥".charAt((n - 1) % 12);
};

const getMonthBeginDay = function (totalMonth) {
  const index = totalMonth - MONTH_FIX_START;
  if (index < 0) {
    return -Infinity;
  } else if (index >= MONTH_FIX_TABLE.length) {
    return Infinity;
  } else {
    return Math.ceil(totalMonth * 25101 / 850 - 1) + MONTH_FIX_TABLE[index];
  }
};

const getLeapMonth = function (totalLeap) {
  const index = totalLeap - LEAP_FIX_START;
  if (index < 0) {
    return -Infinity;
  } else if (index >= LEAP_FIX_TABLE.length) {
    return Infinity;
  } else {
    return Math.ceil(totalLeap * 3157 / 94 - 27) + LEAP_FIX_TABLE[index];
  }
};

const getYearMonth = function (totalMonth) {
  let totalLeap = Math.round((totalMonth + 27) * 94 / 3157);
  const leapMonth = getLeapMonth(totalLeap);
  if (totalMonth < leapMonth) {
    --totalLeap;
  }
  const year = Math.floor((totalMonth - totalLeap) / 12);
  const month = (totalMonth - totalLeap) % 12 + 1;
  const isLeapMonth = totalMonth === leapMonth;
  return { year: year, month: month, isLeapMonth: isLeapMonth };
};

const getGregorianDay = function (totalDay) {
  const d = new Date((totalDay - 1704558) * 8.64e+7);
  return { year: d.getUTCFullYear(), month: d.getUTCMonth() + 1, day: d.getUTCDate() };
};

const printYear = function (totalYear) {
  return `${totalYear - CE_YEAR_OFFSET}<br>${getSexagenaryWord(totalYear)}`;
};

const printMonth = function (totalMonth) {
  const fillZero = function (n, digits) {
    const s = n.toString();
    if (s.length >= digits) {
      return s;
    } else {
      return new Array(digits - s.length).fill("0") + s;
    }
  };
  const d = getMonthBeginDay(totalMonth);
  const g = getGregorianDay(d);
  return `${fillZero(g.month, 2)}-${fillZero(g.day, 2)} ${getSexagenaryWord(d)}`;
};

const getRowClass = function (totalYear) {
  return totalYear % 2 === 0 ? "odd" : "even";
}

const generateCalendar = function () {
  let prevMonth = getYearMonth(MONTH_FIX_START - 1);
  let currMonth = getYearMonth(MONTH_FIX_START);
  let prevLeapTotalMonth = null;
  let html = HTML_HEAD;
  html += TABLE_HEAD;
  html += `    <tr class="${getRowClass(currMonth.year)}">\n      <th rowspan="2">`;
  html += printYear(currMonth.year);
  html += '</th>\n';
  for (let i = 1; i < currMonth.month; ++i) {
    html += '      <td rowspan="2"></td>\n';
  }
  if (currMonth.isLeapMonth) {
    html += '      <td rowspan="1"></td>\n';
  }
  for (let i = 0; i < MONTH_FIX_TABLE.length; ++i) {
    const totalMonth = MONTH_FIX_START + i;
    const nextMonth = getYearMonth(totalMonth + 1);
    if (i !== 0 && currMonth.year !== prevMonth.year) {
      if (currMonth.year % 10 === 7) {
        html += TABLE_HEAD;
      }
      html += `    <tr class="${getRowClass(currMonth.year)}">\n      <th rowspan="2">`;
      html += printYear(currMonth.year);
      html += '</th>\n';
    }
    if (currMonth.isLeapMonth) {
      prevLeapTotalMonth = totalMonth;
    } else {
      if (nextMonth.isLeapMonth) {
        html += '      <td rowspan="1">';
      } else {
        html += '      <td rowspan="2">';
      }
      html += printMonth(totalMonth);
      html += '</td>\n';
    }
    if (nextMonth.year !== currMonth.year) {
      if (prevLeapTotalMonth !== null) {
        html += '    </tr>\n    <tr>\n      <td rowspan="1" class="leap">';
        html += printMonth(prevLeapTotalMonth);
        html += '</td>\n    </tr>\n';
        prevLeapTotalMonth = null;
      } else {
        html += '    </tr>\n    <tr></tr>\n';
      }
    }
    prevMonth = currMonth;
    currMonth = nextMonth;
  }
  if (currMonth.year === prevMonth.year) {
    for (let i = prevMonth.month + 1; i <= 12; ++i) {
      html += '      <td rowspan="2"></td>\n';
    }
    if (prevLeapTotalMonth !== null) {
      html += '    </tr>\n    <tr>\n      <td rowspan="1" class="leap">';
      html += printMonth(prevLeapTotalMonth);
      html += '</td>\n    </tr>\n';
    } else {
      html += '    </tr>\n    <tr></tr>\n';
    }
    html += '    </tr>\n';
  }
  html += HTML_TAIL;
  return html;
};

const fs = require("fs");
fs.writeFileSync("../lib/曆表.wy", generateWenyan());
fs.writeFileSync("./calendar.html", generateCalendar());
